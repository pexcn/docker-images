name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'ext/**'
      - '**.md'
      - '**.yml'
  workflow_dispatch:

jobs:
  build-and-push:
    #if: "!startsWith(github.event.head_commit.message, 'ext:')"
    runs-on: ubuntu-20.04
    env:
      TZ: Asia/Taipei
    strategy:
      fail-fast: false
      matrix:
        include:
          # buster
          - BUILD_CONTEXT: buildbot/buster
            TARGET_PLATFORMS: linux/amd64
          # buster-android
          - BUILD_CONTEXT: buildbot/buster-android
            TARGET_PLATFORMS: linux/amd64
          # buster-openwrt
          - BUILD_CONTEXT: buildbot/buster-openwrt
            TARGET_PLATFORMS: linux/amd64
          # buster-padavan
          - BUILD_CONTEXT: buildbot/buster-padavan
            TARGET_PLATFORMS: linux/amd64
          # chinadns-ng
          - BUILD_CONTEXT: net/chinadns-ng
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # chisel
          - BUILD_CONTEXT: net/chisel
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # dns2tcp
          - BUILD_CONTEXT: net/dns2tcp
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # hev-socks5-server
          - BUILD_CONTEXT: net/hev-socks5-server
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # ipt2socks
          - BUILD_CONTEXT: net/ipt2socks
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # mtg
          - BUILD_CONTEXT: net/mtg
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # netspeeder
          - BUILD_CONTEXT: net/netspeeder
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shadowsocks-libev
          - BUILD_CONTEXT: net/shadowsocks-libev
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shadowsocks-rust
          - BUILD_CONTEXT: net/shadowsocks-rust
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # tor
          - BUILD_CONTEXT: net/tor
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # trojan
          - BUILD_CONTEXT: net/trojan
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # wgcf
          - BUILD_CONTEXT: net/wgcf
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # iperf
          - BUILD_CONTEXT: utils/iperf
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # rng-tools
          - BUILD_CONTEXT: utils/rng-tools
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shadowsocks-manager
          - BUILD_CONTEXT: utils/shadowsocks-manager
            TARGET_PLATFORMS: linux/amd64
          # smartmontools
          - BUILD_CONTEXT: utils/smartmontools
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # speedtest-go
          - BUILD_CONTEXT: utils/speedtest-go
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # vlmcsd
          - BUILD_CONTEXT: utils/vlmcsd
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          #
          # Deprecated
          #
          ## dsm-open-vm-tools
          #- BUILD_CONTEXT: utils/dsm-open-vm-tools
          #  TARGET_PLATFORMS: linux/amd64,linux/arm64
          ## buster-kernel
          #- BUILD_CONTEXT: buildbot/buster-kernel
          #  TARGET_PLATFORMS: linux/amd64
          ## pptpd
          #- BUILD_CONTEXT: net/pptpd
          #  TARGET_PLATFORMS: linux/amd64,linux/arm64
    steps:
      # prepare
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set environment variables
        run: |
          echo "BUILD_TAG=$(basename ${{ matrix.BUILD_CONTEXT }})" >> $GITHUB_ENV

      # login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.BUILD_TAG }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.BUILD_TAG }}-buildx-

      # build & push
      - name: Build image and Push to Container Registries
        uses: docker/build-push-action@v2
        if: github.event_name == 'push'
        with:
          context: ${{ matrix.BUILD_CONTEXT }}
          tags: |
            ${{ github.repository }}:${{ env.BUILD_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.BUILD_TAG }}
          platforms: ${{ matrix.TARGET_PLATFORMS }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
