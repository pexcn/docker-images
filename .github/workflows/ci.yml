name: Build

on:
  push:
    paths-ignore:
      - 'ext/**'
      - '**.md'
      - '**/docker-compose.yml'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Whether to deploy DockerHub and GHCR'
        required: true
        default: '0'

jobs:
  build-and-push:
    #if: "!contains(github.event.head_commit.message, 'do-not-build')"
    runs-on: ubuntu-22.04
    env:
      TZ: Asia/Taipei
    if: contains(github.event.head_commit.modified, matrix.BUILD_CONTEXT)
    strategy:
      fail-fast: false
      matrix:
        include:
          # bookworm
          - BUILD_CONTEXT: buildbot/bookworm
            TARGET_PLATFORMS: linux/amd64
          # bookworm-android
          - BUILD_CONTEXT: buildbot/bookworm-android
            TARGET_PLATFORMS: linux/amd64
          # bookworm-openwrt
          - BUILD_CONTEXT: buildbot/bookworm-openwrt
            TARGET_PLATFORMS: linux/amd64
          # gfw-defense
          - BUILD_CONTEXT: civ/gfw-defense
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # motd
          - BUILD_CONTEXT: civ/motd
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # android
          - BUILD_CONTEXT: dev/android
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # c
          - BUILD_CONTEXT: dev/c
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # dev
          - BUILD_CONTEXT: dev/dev
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # go
          - BUILD_CONTEXT: dev/go
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # python
          - BUILD_CONTEXT: dev/python
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # rust
          - BUILD_CONTEXT: dev/rust
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shell
          - BUILD_CONTEXT: dev/shell
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # chinadns-ng
          - BUILD_CONTEXT: net/chinadns-ng
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # dns2tcp
          - BUILD_CONTEXT: net/dns2tcp
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # finalspeed
          - BUILD_CONTEXT: net/finalspeed
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # ipt2socks
          - BUILD_CONTEXT: net/ipt2socks
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # kcptun-libev
          - BUILD_CONTEXT: net/kcptun-libev
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # mtg
          - BUILD_CONTEXT: net/mtg
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # netspeeder
          - BUILD_CONTEXT: net/netspeeder
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # nginx
          - BUILD_CONTEXT: net/nginx
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # pcap2socks
          - BUILD_CONTEXT: net/pcap2socks
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # phantun
          - BUILD_CONTEXT: net/phantun
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shadowsocks-libev
          - BUILD_CONTEXT: net/shadowsocks-libev
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shadowsocks-rust
          - BUILD_CONTEXT: net/shadowsocks-rust
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # smartdns
          - BUILD_CONTEXT: net/smartdns
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # strongswan
          - BUILD_CONTEXT: net/strongswan
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # tinyfecvpn
          - BUILD_CONTEXT: net/tinyfecvpn
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # tor
          - BUILD_CONTEXT: net/tor
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # trojan
          - BUILD_CONTEXT: net/trojan
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # udp2raw
          - BUILD_CONTEXT: net/udp2raw
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # udpspeeder
          - BUILD_CONTEXT: net/udpspeeder
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # wireguard
          - BUILD_CONTEXT: net/wireguard
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # acme.sh
          - BUILD_CONTEXT: utils/acme.sh
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # coremark
          - BUILD_CONTEXT: utils/coremark
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # cron
          - BUILD_CONTEXT: utils/cron
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # ddns-checker
          - BUILD_CONTEXT: utils/ddns-checker
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # rng-tools
          - BUILD_CONTEXT: utils/rng-tools
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # rsync
          - BUILD_CONTEXT: utils/rsync
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # samba
          - BUILD_CONTEXT: utils/samba
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # shairport-sync
          - BUILD_CONTEXT: utils/shairport-sync
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # smartmontools
          - BUILD_CONTEXT: utils/smartmontools
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # speedtest-go
          - BUILD_CONTEXT: utils/speedtest-go
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # transproxy
          - BUILD_CONTEXT: utils/transproxy
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # unixbench
          - BUILD_CONTEXT: utils/unixbench
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # vlmcsd
          - BUILD_CONTEXT: utils/vlmcsd
            TARGET_PLATFORMS: linux/amd64,linux/arm64
          # webdav
          - BUILD_CONTEXT: utils/webdav
            TARGET_PLATFORMS: linux/amd64,linux/arm64
    steps:
      # prepare
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set environment variables
        run: |
          echo "BUILD_TAG=$(basename ${{ matrix.BUILD_CONTEXT }})" >> $GITHUB_ENV

      # login
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # cache
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.BUILD_TAG }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.BUILD_TAG }}-buildx-

      # build & push
      - name: Build image and Push to Container Registries
        uses: docker/build-push-action@v5
        if: ${{ github.event_name == 'push' || github.event.inputs.deploy == '1' }}
        with:
          context: ${{ matrix.BUILD_CONTEXT }}
          tags: |
            ${{ github.repository }}:${{ env.BUILD_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.BUILD_TAG }}
          platforms: ${{ matrix.TARGET_PLATFORMS }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
